<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neuedu.crm.mapper.ContractMapper">
    <cache/>
    <resultMap id="BaseResultMap" type="com.neuedu.crm.pojo.Contract">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result property="contractNo" jdbcType="VARCHAR" column="CONTRACT_NO"/>
        <result property="customerId" jdbcType="INTEGER" column="CUSTOMER_ID"/>
        <result property="signUserId" jdbcType="INTEGER" column="SIGN_USER_ID"/>
        <result property="signUserName" jdbcType="VARCHAR" column="SIGN_USER_NAME"/>
        <result property="createDate" jdbcType="TIMESTAMP" column="CREATE_DATE"/>
        <result property="signDate" jdbcType="TIMESTAMP" column="SIGN_DATE"/>
        <result property="endDate" jdbcType="TIMESTAMP" column="END_DATE"/>
        <result property="manageId" jdbcType="INTEGER" column="MANAGE_ID"/>
        <result property="manageName" jdbcType="VARCHAR" column="MANAGE_NAME"/>
        <result property="totalAmount" jdbcType="DOUBLE" column="TOTAL_AMOUNT"/>
        <result property="otherAmount" jdbcType="DOUBLE" column="OTHER_AMOUNT"/>
        <result property="discountAmount" jdbcType="DOUBLE" column="DISCOUNT_AMOUNT"/>
        <result property="contractAmount" jdbcType="DOUBLE" column="CONTRACT_AMOUNT"/>
        <result property="baseAmount" jdbcType="DOUBLE" column="base_Amount"/>
        <result property="contractType" jdbcType="VARCHAR" column="CONTRACT_TYPE"/>
        <result property="payType" jdbcType="VARCHAR" column="PAY_TYPE"/>
        <result property="userNum" jdbcType="VARCHAR" column="USER_NUM"/>
        <result property="limitYears" jdbcType="DOUBLE" column="LIMIT_YEARS"/>
        <result property="delFlag" jdbcType="VARCHAR" column="DEL_FLAG"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id
        , CUSTOMER_ID, CONTRACT_NO, SIGN_USER_ID, SIGN_USER_NAME, CREATE_DATE, SIGN_DATE, END_DATE,
    MANAGE_ID, MANAGE_NAME, TOTAL_AMOUNT, OTHER_AMOUNT, DISCOUNT_AMOUNT, CONTRACT_AMOUNT,
    base_Amount, CONTRACT_TYPE, PAY_TYPE, USER_NUM, LIMIT_YEARS, DEL_FLAG
    </sql>
    <select id="selectByExample" parameterType="com.neuedu.crm.pojo.ContractExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from contract
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from contract
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from contract
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.neuedu.crm.pojo.ContractExample">
        delete from contract
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.neuedu.crm.pojo.Contract"
            useGeneratedKeys="true">
        insert into contract (CUSTOMER_ID, CONTRACT_NO, SIGN_USER_ID, SIGN_USER_NAME, CREATE_DATE, SIGN_DATE, END_DATE,
                              MANAGE_ID, MANAGE_NAME, TOTAL_AMOUNT, OTHER_AMOUNT, DISCOUNT_AMOUNT, CONTRACT_AMOUNT,
                              base_Amount, CONTRACT_TYPE, PAY_TYPE, USER_NUM, LIMIT_YEARS)
        values (#{customerId,jdbcType=INTEGER},
                #{contractNo,jdbcType=VARCHAR},
                #{signUserId,jdbcType=INTEGER},
                #{signUserName,jdbcType=VARCHAR},
                #{createDate,jdbcType=TIMESTAMP},
                #{signDate,jdbcType=TIMESTAMP},
                #{endDate,jdbcType=TIMESTAMP},
                #{manageId,jdbcType=INTEGER},
                #{manageName,jdbcType=VARCHAR},
                #{totalAmount,jdbcType=DOUBLE},
                #{otherAmount,jdbcType=DOUBLE},
                #{discountAmount,jdbcType=DOUBLE},
                #{contractAmount,jdbcType=DOUBLE},
                #{baseAmount,jdbcType=DOUBLE},
                #{contractType,jdbcType=VARCHAR},
                #{payType,jdbcType=VARCHAR},
                #{userNum,jdbcType=VARCHAR},
                #{limitYears,jdbcType=DOUBLE})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.neuedu.crm.pojo.Contract"
            useGeneratedKeys="true">
        insert into contract
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="customerId != null">
                CUSTOMER_ID,
            </if>
            <if test="contractNo != null">
                contract_No,
            </if>
            <if test="signUserId != null">
                SIGN_USER_ID,
            </if>
            <if test="signUserName != null">
                SIGN_USER_NAME,
            </if>
            <if test="createDate != null">
                CREATE_DATE,
            </if>
            <if test="signDate != null">
                SIGN_DATE,
            </if>
            <if test="endDate != null">
                END_DATE,
            </if>
            <if test="manageId != null">
                MANAGE_ID,
            </if>
            <if test="manageName != null">
                MANAGE_NAME,
            </if>
            <if test="totalAmount != null">
                TOTAL_AMOUNT,
            </if>
            <if test="otherAmount != null">
                OTHER_AMOUNT,
            </if>
            <if test="discountAmount != null">
                DISCOUNT_AMOUNT,
            </if>
            <if test="contractAmount != null">
                CONTRACT_AMOUNT,
            </if>
            <if test="baseAmount != null">
                BASE_AMOUNT,
            </if>
            <if test="contractType != null">
                CONTRACT_TYPE,
            </if>

            <if test="payType != null">
                PAY_TYPE,
            </if>
            <if test="userNum != null">
                USER_NUM,
            </if>
            <if test="limitYears != null">
                LIMIT_YEARS,
            </if>
            <if test="delFlag != null">
                DEL_FLAG,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">

            <if test="customerId != null">
                #{customerId,jdbcType=INTEGER},
            </if>

            <if test="contractNo != null">
                #{contractNo,jdbcType=VARCHAR},
            </if>

            <if test="signUserId != null">
                #{signUserId,jdbcType=INTEGER},
            </if>
            <if test="signUserName != null">
                #{signUserName,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="signDate != null">
                #{signDate,jdbcType=TIMESTAMP},
            </if>
            <if test="endDate != null">
                #{endDate,jdbcType=TIMESTAMP},
            </if>
            <if test="manageId != null">
                #{manageId,jdbcType=INTEGER},
            </if>
            <if test="manageName != null">
                #{manageName,jdbcType=VARCHAR},
            </if>
            <if test="totalAmount != null">
                #{totalAmount,jdbcType=DOUBLE},
            </if>
            <if test="otherAmount != null">
                #{otherAmount,jdbcType=DOUBLE},
            </if>


            <if test="discountAmount != null">
                #{discountAmount,jdbcType=DOUBLE},
            </if>
            <if test="contractAmount != null">
                #{contractAmount,jdbcType=DOUBLE},
            </if>
            <if test="baseAmount != null">
                #{baseAmount,jdbcType=DOUBLE},
            </if>
            <if test="contractType != null">
                #{contractType,jdbcType=VARCHAR},
            </if>

            <if test="payType != null">
                #{payType,jdbcType=VARCHAR},
            </if>
            <if test="userNum != null">
                #{userNum,jdbcType=VARCHAR},
            </if>
            <if test="limitYears != null">
                #{limitYears,jdbcType=DOUBLE},
            </if>
            <if test="delFlag != null">
                #{delFlag,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.neuedu.crm.pojo.ContractExample" resultType="java.lang.Long">
        select count(*) from contract
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update contract
        <set>

            <if test="record.customerId != null">
                customer_Id = #{record.customerId,jdbcType=INTEGER},
            </if>

            <if test="record.contractNo != null">
                contract_No = #{"record.contractNo,jdbcType=VARCHAR},
            </if>

            <if test="record.signUserId != null">
                sign_User_Id = #{"record.signUserId,jdbcType=INTEGER},
            </if>
            <if test="record.signUserName != null">
                sign_User_Name = #{"record.signUserName,jdbcType=VARCHAR},
            </if>
            <if test="record.createDate != null">
                create_Date = #{"record.createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.signDate != null">
                sign_Date = #{"record.signDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.endDate != null">
                end_Date = #{"record.endDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.manageId != null">
                manage_Id = #{"record.manageId,jdbcType=INTEGER},
            </if>
            <if test="record.manageName != null">
                manage_Name = #{"record.manageName,jdbcType=VARCHAR},
            </if>
            <if test="record.totalAmount != null">
                total_Amount = #{"record.totalAmount,jdbcType=DOUBLE},
            </if>
            <if test="record.otherAmount != null">
                other_Amount = #{"record.otherAmount,jdbcType=DOUBLE},
            </if>


            <if test="record.discountAmount != null">
                discount_Amount = #{"record.discountAmount,jdbcType=DOUBLE},
            </if>
            <if test="record.contractAmount != null">
                contract_Amount = #{"record.contractAmount,jdbcType=DOUBLE},
            </if>
            <if test="record.baseAmount != null">
                base_Amount = #{"record.baseAmount,jdbcType=DOUBLE},
            </if>
            <if test="record.contractType != null">
                contract_Type = #{"record.contractType,jdbcType=VARCHAR},
            </if>

            <if test="record.payType != null">
                pay_Type = #{"record.payType,jdbcType=VARCHAR},
            </if>
            <if test="record.userNum != null">
                user_Num = #{"record.userNum,jdbcType=VARCHAR},
            </if>
            <if test="record.limitYears != null">
                limit_Years = #{"record.limitYears,jdbcType=DOUBLE},
            </if>
            <if test="record.delFlag != null">
                del_Flag = #{"record.delFlag,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update contract
        set

        customer_Id = #{record.customerId,jdbcType=INTEGER},

        contract_No = #{"record.contractNo,jdbcType=VARCHAR},

        sign_User_Id = #{"record.signUserId,jdbcType=INTEGER},

        sign_User_Name = #{"record.signUserName,jdbcType=VARCHAR},

        create_Date = #{"record.createDate,jdbcType=TIMESTAMP},

        sign_Date = #{"record.signDate,jdbcType=TIMESTAMP},

        end_Date = #{"record.endDate,jdbcType=TIMESTAMP},

        manage_Id = #{"record.manageId,jdbcType=INTEGER},

        manage_Name = #{"record.manageName,jdbcType=VARCHAR},

        total_Amount = #{"record.totalAmount,jdbcType=DOUBLE},

        other_Amount = #{"record.otherAmount,jdbcType=DOUBLE},

        discount_Amount = #{"record.discountAmount,jdbcType=DOUBLE},

        contract_Amount = #{"record.contractAmount,jdbcType=DOUBLE},

        base_Amount = #{"record.baseAmount,jdbcType=DOUBLE},

        contract_Type = #{"record.contractType,jdbcType=VARCHAR},

        pay_Type = #{"record.payType,jdbcType=VARCHAR},

        user_Num = #{"record.userNum,jdbcType=VARCHAR},

        limit_Years = #{"record.limitYears,jdbcType=DOUBLE},

        del_Flag = #{"record.delFlag,jdbcType=INTEGER}


        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.crm.pojo.Contract">
        update contract
        <set>

            <if test="customerId != null">
                customer_Id = #{customerId,jdbcType=INTEGER},
            </if>

            <if test="contractNo != null">
                contract_No = #{contractNo,jdbcType=VARCHAR},
            </if>

            <if test="signUserId != null">
                sign_User_Id = #{signUserId,jdbcType=INTEGER},
            </if>
            <if test="signUserName != null">
                sign_User_Name = #{signUserName,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                create_Date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="signDate != null">
                sign_Date = #{signDate,jdbcType=TIMESTAMP},
            </if>
            <if test="endDate != null">
                end_Date = #{endDate,jdbcType=TIMESTAMP},
            </if>
            <if test="manageId != null">
                manage_Id = #{manageId,jdbcType=INTEGER},
            </if>
            <if test="manageName != null">
                manage_Name = #{manageName,jdbcType=VARCHAR},
            </if>
            <if test="totalAmount != null">
                total_Amount = #{totalAmount,jdbcType=DOUBLE},
            </if>
            <if test="otherAmount != null">
                other_Amount = #{otherAmount,jdbcType=DOUBLE},
            </if>


            <if test="discountAmount != null">
                discount_Amount = #{discountAmount,jdbcType=DOUBLE},
            </if>
            <if test="contractAmount != null">
                contract_Amount = #{contractAmount,jdbcType=DOUBLE},
            </if>
            <if test="baseAmount != null">
                base_Amount = #{baseAmount,jdbcType=DOUBLE},
            </if>
            <if test="contractType != null">
                contract_Type = #{contractType,jdbcType=VARCHAR},
            </if>

            <if test="payType != null">
                pay_Type = #{payType,jdbcType=VARCHAR},
            </if>
            <if test="userNum != null">
                user_Num = #{userNum,jdbcType=VARCHAR},
            </if>
            <if test="limitYears != null">
                limit_Years = #{limitYears,jdbcType=DOUBLE},
            </if>
            <if test="delFlag != null">
                del_Flag = #{delFlag,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.neuedu.crm.pojo.Contract">
        update contract
        set
            customer_Id = #{record.customerId,jdbcType=INTEGER},

            contract_No = #{record.contractNo,jdbcType=VARCHAR},

            sign_User_Id = #{record.signUserId,jdbcType=INTEGER},

            sign_User_Name = #{record.signUserName,jdbcType=VARCHAR},

            create_Date = #{record.createDate,jdbcType=TIMESTAMP},

            sign_Date = #{record.signDate,jdbcType=TIMESTAMP},

            end_Date = #{record.endDate,jdbcType=TIMESTAMP},

            manage_Id = #{record.manageId,jdbcType=INTEGER},

            manage_Name = #{record.manageName,jdbcType=VARCHAR},

            total_Amount = #{record.totalAmount,jdbcType=DOUBLE},

            other_Amount = #{record.otherAmount,jdbcType=DOUBLE},

            discount_Amount = #{record.discountAmount,jdbcType=DOUBLE},

            contract_Amount = #{record.contractAmount,jdbcType=DOUBLE},

            base_Amount = #{record.baseAmount,jdbcType=DOUBLE},

            contract_Type = #{record.contractType,jdbcType=VARCHAR},

            pay_Type = #{record.payType,jdbcType=VARCHAR},

            user_Num = #{record.userNum,jdbcType=VARCHAR},

            limit_Years = #{record.limitYears,jdbcType=DOUBLE},

            del_Flag = #{record.delFlag,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>